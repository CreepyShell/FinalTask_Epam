// <auto-generated />
using System;
using InternetForum.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InternetForum.DAL.Migrations
{
    [DbContext(typeof(ForumDbContext))]
    [Migration("20220120122900_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InternetForum.DAL.DomainModels.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentText = "My last summer holidays was the best",
                            CreatedAt = new DateTime(2022, 1, 20, 15, 28, 59, 683, DateTimeKind.Local).AddTicks(8783),
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommentText = "My last winter holidays was the best",
                            CreatedAt = new DateTime(2022, 4, 21, 14, 28, 59, 684, DateTimeKind.Local).AddTicks(1201),
                            PostId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CommentText = "My last autumn holidays was the best",
                            CreatedAt = new DateTime(2022, 7, 20, 14, 28, 59, 684, DateTimeKind.Local).AddTicks(1285),
                            PostId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CommentId = 1,
                            CommentText = "My last summer holidays was the best too. Thank you!",
                            CreatedAt = new DateTime(2022, 1, 20, 15, 28, 59, 684, DateTimeKind.Local).AddTicks(1297),
                            PostId = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            CommentId = 2,
                            CommentText = "My last winter holidays was the best too. It was good time",
                            CreatedAt = new DateTime(2022, 4, 21, 14, 28, 59, 684, DateTimeKind.Local).AddTicks(1308),
                            PostId = 2,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("InternetForum.DAL.DomainModels.CommentReaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLiked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReactedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("CommentReactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentId = 1,
                            IsLiked = true,
                            ReactedAt = new DateTime(2022, 1, 20, 16, 28, 59, 684, DateTimeKind.Local).AddTicks(9035),
                            UserId = 5
                        },
                        new
                        {
                            Id = 2,
                            CommentId = 2,
                            IsLiked = true,
                            ReactedAt = new DateTime(2022, 4, 22, 14, 28, 59, 684, DateTimeKind.Local).AddTicks(9975),
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            CommentId = 3,
                            IsLiked = false,
                            ReactedAt = new DateTime(2022, 7, 20, 14, 28, 59, 685, DateTimeKind.Local).AddTicks(20),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("InternetForum.DAL.DomainModels.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("PostTopic")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 1, 20, 14, 28, 59, 676, DateTimeKind.Local).AddTicks(3811),
                            Header = "Summer holidays",
                            PostTopic = 3,
                            Text = "Tell about your best summer holidays",
                            UpdatedAt = new DateTime(2022, 1, 20, 14, 38, 59, 683, DateTimeKind.Local).AddTicks(1060),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 4, 20, 14, 28, 59, 683, DateTimeKind.Local).AddTicks(5292),
                            Header = "Winter holidays",
                            PostTopic = 3,
                            Text = "Tell about your best winter holidays",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 19, 14, 28, 59, 683, DateTimeKind.Local).AddTicks(5502),
                            Header = "Autumn holidays",
                            PostTopic = 3,
                            Text = "Tell about your best Autumn holidays",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("InternetForum.DAL.DomainModels.PostReaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsLiked")
                        .HasColumnType("bit");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReactedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("PostReactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsLiked = true,
                            PostId = 1,
                            ReactedAt = new DateTime(2022, 1, 20, 15, 28, 59, 684, DateTimeKind.Local).AddTicks(4709),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsLiked = false,
                            PostId = 1,
                            ReactedAt = new DateTime(2022, 1, 20, 15, 28, 59, 684, DateTimeKind.Local).AddTicks(5584),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            IsLiked = true,
                            PostId = 2,
                            ReactedAt = new DateTime(2022, 4, 21, 14, 28, 59, 684, DateTimeKind.Local).AddTicks(5629),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            IsLiked = true,
                            PostId = 3,
                            ReactedAt = new DateTime(2022, 7, 20, 14, 28, 59, 684, DateTimeKind.Local).AddTicks(5638),
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            IsLiked = false,
                            PostId = 3,
                            ReactedAt = new DateTime(2022, 7, 20, 14, 28, 59, 684, DateTimeKind.Local).AddTicks(5645),
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            IsLiked = true,
                            PostId = 2,
                            ReactedAt = new DateTime(2022, 4, 11, 14, 28, 59, 684, DateTimeKind.Local).AddTicks(5652),
                            UserId = 4
                        },
                        new
                        {
                            Id = 7,
                            IsLiked = false,
                            PostId = 1,
                            ReactedAt = new DateTime(2022, 1, 20, 15, 28, 59, 684, DateTimeKind.Local).AddTicks(5660),
                            UserId = 5
                        },
                        new
                        {
                            Id = 8,
                            IsLiked = true,
                            PostId = 1,
                            ReactedAt = new DateTime(2022, 1, 20, 15, 28, 59, 684, DateTimeKind.Local).AddTicks(5666),
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            IsLiked = false,
                            PostId = 3,
                            ReactedAt = new DateTime(2022, 7, 20, 14, 28, 59, 684, DateTimeKind.Local).AddTicks(5673),
                            UserId = 5
                        },
                        new
                        {
                            Id = 10,
                            IsLiked = false,
                            PostId = 2,
                            ReactedAt = new DateTime(2022, 4, 21, 14, 28, 59, 684, DateTimeKind.Local).AddTicks(5681),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("InternetForum.DAL.DomainModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(1990, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anton@gmail.com",
                            RegisteredAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "anton_1990"
                        },
                        new
                        {
                            Id = 2,
                            Email = "dmitro_kovalcuk@gmail.com",
                            RegisteredAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "dmidro"
                        },
                        new
                        {
                            Id = 3,
                            BirthDay = new DateTime(2000, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "My_mail84@gmail.com",
                            RegisteredAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user1984"
                        },
                        new
                        {
                            Id = 4,
                            Email = "GoodLuck11@gmail.com",
                            RegisteredAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Have_A_Nice_Day"
                        },
                        new
                        {
                            Id = 5,
                            BirthDay = new DateTime(1999, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "t_mike2002_11@gmail.com",
                            RegisteredAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "mike_2002"
                        });
                });

            modelBuilder.Entity("InternetForum.DAL.DomainModels.Comment", b =>
                {
                    b.HasOne("InternetForum.DAL.DomainModels.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternetForum.DAL.DomainModels.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("InternetForum.DAL.DomainModels.CommentReaction", b =>
                {
                    b.HasOne("InternetForum.DAL.DomainModels.Comment", "Comment")
                        .WithMany("Reactions")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternetForum.DAL.DomainModels.User", "User")
                        .WithMany("CommentReactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("InternetForum.DAL.DomainModels.Post", b =>
                {
                    b.HasOne("InternetForum.DAL.DomainModels.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternetForum.DAL.DomainModels.PostReaction", b =>
                {
                    b.HasOne("InternetForum.DAL.DomainModels.Post", "Post")
                        .WithMany("Reactions")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternetForum.DAL.DomainModels.User", "User")
                        .WithMany("PostReactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
